name: Infra - Config Region

on: 
  workflow_dispatch:

env:
  PREFIX: 'pz-ao'
  SUFFIX: '18'

  RBAC_ROLE_ID_READER: 'acdd72a7-3385-48ef-bd42-f606fba81ae7'
  RBAC_ROLE_ID_NETWORK_CONTRIBUTOR: '4d97b98b-1d4f-4787-a291-c67834d212e7'

  AZURE_RESOURCE_GROUP_GLOBAL: 'always-on-global'

  NSG_IN_SRC: '75.68.47.183/32'

  AVL_ZONES: '1,2,3'

  IDENTITY_TYPE: 'UserAssigned'

  VNET_PREFIX: '10.0.0.0/16'
  VNET_ENABLE_DDOS: 'false'
  APIM_SUBNET_NAME: 'Apim'
  APIM_SUBNET_PREFIX: '10.0.1.0/24'
  APIM_SUBNET_FRONTDOOR_INBOUND_ONLY: 'true'
  APPGW_SUBNET_NAME: 'AppGw'
  APPGW_SUBNET_PREFIX: '10.0.2.0/24'
  APP_SUBNET_NAME: 'App'
  APP_SUBNET_PREFIX: '10.0.5.0/24'
  APP_SUBNET_SERVICE_ENDPOINTS: 'Microsoft.AzureCosmosDB,Microsoft.EventHub,Microsoft.KeyVault'

  EVENT_HUB_CAPACITY: '1'
  EVENT_HUB_EVENT_HUB_NAME: 'eh1'
  EVENT_HUB_CONSUMER_GROUP_NAME: 'ao'

  AKS_ZONES_FOR_CLI: '1 2 3'
  AKS_VERSION: '1.20.5'
  AKS_NET_PLUGIN: 'kubenet'
  AKS_SERVICE_CIDR: '10.1.0.0/16'
  AKS_DNS_SERVICE_IP: '10.1.0.10'
  AKS_POD_CIDR: '10.241.0.0/16'
  AKS_DOCKER_BRIDGE_ADDRESS: '172.17.0.1/16'

  AKS_SYSTEM_POOL_NODE_COUNT: '1'
  AKS_SYSTEM_POOL_AUTOSCALE: 'true'
  AKS_SYSTEM_POOL_AUTOSCALE_COUNT_MIN: '1'
  AKS_SYSTEM_POOL_AUTOSCALE_COUNT_MAX: '5'
  AKS_SYSTEM_POOL_NODE_SIZE: 'Standard_DS2_v2'

  AKS_USER_POOL_DEPLOY: 'true'
  AKS_USER_POOL_NODE_NAME: 'userpool1'
  AKS_USER_POOL_NODE_COUNT: '0'
  AKS_USER_POOL_AUTOSCALE: 'true'
  AKS_USER_POOL_AUTOSCALE_COUNT_MIN: '0'
  AKS_USER_POOL_AUTOSCALE_COUNT_MAX: '10'
  AKS_USER_POOL_NODE_SIZE: 'Standard_DS2_v2'

  APPGW_SKU_NAME: 'Standard_v2'

  APIM_SKU_NAME: 'Developer'
  #APIM_SKU_NAME: 'Premium'
  APIM_VNET_TYPE: 'External'
  APIM_SCALE_UNITS: 3
  APIM_API_VERSION_SET_NAME: 'conference_api_vs'
  APIM_API_VERSION_SET_DESCRIPTION: 'Conference API Description'
  APIM_API_NAME: 'demo-conference-api'
  APIM_API_DESCRIPTION: 'Foo'
  APIM_API_SERVICE_URL: 'https://conferenceapi.azurewebsites.net'
  APIM_API_SERVICE_PATH: 'conference'

  FRONT_DOOR_ORIGIN_GROUP_NAME: 'apims'
  FRONT_DOOR_ROUTE_NAME: 'api'

jobs:
  deploy-stamp:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: [eastus, westus2]
    steps:
      - name: Install Azure CLI extensions
        run: |
          az extension add --name aks-preview
          az extension add --name application-insights
          az extension add --name front-door

      - name: Checkout repository
        if: success()
        uses: actions/checkout@v2

      - name: Azure login
        if: success()
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Prepare dynamic env vars
        if: success()
        run: |
          AZURE_RESOURCE_GROUP=always-on-${{ matrix.region }}
          AKS_CLUSTER_NAME=${{ env.PREFIX }}-${{ matrix.region }}
          UAMI_NAME=${{ env.PREFIX }}-uami
          LA_WORKSPACE_NAME=${{ env.PREFIX }}
          APP_INSIGHTS_NAME=${{ env.PREFIX }}
          FRONT_DOOR_NAME=${{ env.PREFIX }}

          echo "AZURE_RESOURCE_GROUP=$AZURE_RESOURCE_GROUP" >> $GITHUB_ENV
          echo "AKS_CLUSTER_NAME=$AKS_CLUSTER_NAME" >> $GITHUB_ENV
          echo "UAMI_NAME=$UAMI_NAME" >> $GITHUB_ENV
          echo "LA_WORKSPACE_NAME=$LA_WORKSPACE_NAME" >> $GITHUB_ENV
          echo "APP_INSIGHTS_NAME=$APP_INSIGHTS_NAME" >> $GITHUB_ENV
          echo "FRONT_DOOR_NAME=$FRONT_DOOR_NAME" >> $GITHUB_ENV

          echo "UAMI_ID=$(az identity show --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} -g ${{ env.AZURE_RESOURCE_GROUP_GLOBAL }} -n $UAMI_NAME -o tsv --query 'id')" >> $GITHUB_ENV
          echo "UAMI_PRINCIPAL_ID=$(az identity show --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} -g ${{ env.AZURE_RESOURCE_GROUP_GLOBAL }} -n $UAMI_NAME -o tsv --query 'principalId')" >> $GITHUB_ENV

          echo "APP_NSG_NAME=ao-app-${{ matrix.region }}" >> $GITHUB_ENV
          echo "APIM_NSG_NAME=ao-apim-${{ matrix.region }}" >> $GITHUB_ENV

          echo "DDOS_PLAN_NAME=${{ env.PREFIX }}" >> $GITHUB_ENV

          echo "VNET_NAME=ao-${{ matrix.region }}" >> $GITHUB_ENV

          echo "KEY_VAULT_NAME=${{ env.PREFIX }}-${{ matrix.region }}-${{ env.SUFFIX }}" >> $GITHUB_ENV

          echo "EVENT_HUB_NS_NAME=${{ env.PREFIX }}-${{ matrix.region }}" >> $GITHUB_ENV

          echo "AKS_DNS_PREFIX=${AKS_CLUSTER_NAME//-/}" >> $GITHUB_ENV

          echo "APPGW_NAME=${{ env.PREFIX }}-${{ matrix.region }}" >> $GITHUB_ENV
          echo "APPGW_PUBLIC_IP_NAME=${{ env.PREFIX }}-appgw-${{ matrix.region }}" >> $GITHUB_ENV

          echo "APIM_SERVICE_NAME=${{ env.PREFIX }}-${{ matrix.region }}-${{ env.SUFFIX }}" >> $GITHUB_ENV
          echo "APIM_PUBLIC_IP_NAME=${{ env.PREFIX }}-apim-${{ matrix.region }}" >> $GITHUB_ENV

          echo "AZURE_RESOURCE_GROUP_AKS_NODES=$AZURE_RESOURCE_GROUP-$AKS_CLUSTER_NAME" >> $GITHUB_ENV

          echo "AZURE_CRED_SP_OBJECT_ID=$(az ad sp show --id ${{ secrets.SP_CLIENT_ID }} -o tsv --query 'objectId')" >> $GITHUB_ENV

          echo "LA_WORKSPACE_ID=$(az monitor log-analytics workspace show --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} -g ${{ env.AZURE_RESOURCE_GROUP_GLOBAL }} -n $LA_WORKSPACE_NAME -o tsv --query 'id')" >> $GITHUB_ENV

          echo "APP_INSIGHTS_ID=$(az monitor app-insights component show --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} -g ${{ env.AZURE_RESOURCE_GROUP_GLOBAL }} --app $APP_INSIGHTS_NAME -o tsv --query 'id')" >> $GITHUB_ENV
          echo "APP_INSIGHTS_INSTRUMENTATION_KEY=$(az monitor app-insights component show --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} -g ${{ env.AZURE_RESOURCE_GROUP_GLOBAL }} --app $APP_INSIGHTS_NAME -o tsv --query 'instrumentationKey')" >> $GITHUB_ENV

          echo "FRONT_DOOR_ORIGIN_GROUP_ID=$(az afd origin-group show --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}} -g ${{env.AZURE_RESOURCE_GROUP_GLOBAL}} --profile-name $FRONT_DOOR_NAME --origin-group-name ${{env.FRONT_DOOR_ORIGIN_GROUP_NAME}} -o tsv --query 'id')" >> $GITHUB_ENV
          echo "FRONT_DOOR_ENDPOINT_NAME=${FRONT_DOOR_NAME//-/}" >> $GITHUB_ENV


      - name: Azure logout
        run: |
          az logout
