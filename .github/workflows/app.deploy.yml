name: App-Deploy

on: 
  workflow_dispatch:

env:
  PREFIX: 'pz-ao'
  SUFFIX: '24'

  AKS_PATH_ROOT: './src/workload-deploy/aks/'

jobs:
  deploy-app-in-region:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: [eastus]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure login
        if: success()
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Prepare dynamic env vars
        if: success()
        run: |
          AZURE_RESOURCE_GROUP=always-on-${{ matrix.region }}
          AKS_CLUSTER_NAME=${{ env.PREFIX }}-${{ matrix.region }}

          UAMI_NAME=${{ env.PREFIX }}-${{ matrix.region }}
          AKS_POD_IDENTITY_BINDING_SELECTOR=$UAMI_NAME-binding

          VNET_NAME=${{ env.PREFIX }}-${{ matrix.region }}
          APP_NSG_NAME=app-${{ matrix.region }}

          echo "AZURE_RESOURCE_GROUP=$AZURE_RESOURCE_GROUP" >> $GITHUB_ENV
          echo "AKS_CLUSTER_NAME=$AKS_CLUSTER_NAME" >> $GITHUB_ENV

          echo "UAMI_NAME=$UAMI_NAME" >> $GITHUB_ENV
          echo "AKS_POD_IDENTITY_BINDING_SELECTOR=$AKS_POD_IDENTITY_BINDING_SELECTOR" >> $GITHUB_ENV

          echo "VNET_NAME=$VNET_NAME" >> $GITHUB_ENV
          echo "APP_NSG_NAME=$APP_NSG_NAME" >> $GITHUB_ENV


      - name: Write Pod Identity Binding Selector to Back End YAML file
        if: success()
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: '${{ env.AKS_PATH_ROOT }}workload.back.yaml'
          propertyPath: 'spec.template.metadata.labels.aadpodidbinding'
          value: '${{ env.AKS_POD_IDENTITY_BINDING_SELECTOR }}'
          updateFile: 'true'
          commitChange: 'false'
          createPR: 'false'

      - name: Debug Back
        if: success()
        run: |
          cat ${{ env.AKS_PATH_ROOT }}workload.back.yaml

      - name: Write Pod Identity Binding Selector to Front End YAML file
        if: success()
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: '${{ env.AKS_PATH_ROOT }}workload.front.yaml'
          propertyPath: 'spec.template.metadata.labels.aadpodidbinding'
          value: '${{ env.AKS_POD_IDENTITY_BINDING_SELECTOR }}'
          updateFile: 'true'
          commitChange: 'false'
          createPR: 'false'

      - name: Debug Front
        if: success()
        run: |
          cat ${{ env.AKS_PATH_ROOT }}workload.front.yaml


      - name: Set AKS Context
        if: success()
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          resource-group: '${{ env.AZURE_RESOURCE_GROUP }}'
          cluster-name: '${{ env.AKS_CLUSTER_NAME }}'

      - name: Deploy Back End to AKS
        if: success()
        uses: Azure/k8s-deploy@v1.4
        with:
          manifests: '${{ env.AKS_PATH_ROOT }}workload.back.yaml'
          kubectl-version: 'latest'
          force: true
          namespace: default

      - name: Deploy Front End to AKS
        if: success()
        uses: Azure/k8s-deploy@v1.4
        with:
          manifests: '${{ env.AKS_PATH_ROOT }}workload.front.yaml'
          kubectl-version: 'latest'
          force: true
          namespace: default

      - name: Deploy Services and Ingress to AKS
        if: success()
        uses: Azure/k8s-deploy@v1.4
        with:
          manifests: '${{ env.AKS_PATH_ROOT }}workload.services-ingress.yaml'
          kubectl-version: 'latest'
          force: true
          namespace: default


      - name: Azure logout
        run: |
          az logout
