name: App-Deploy

on: 
  workflow_dispatch:

env:
  PREFIX: 'pz-ao'
  SUFFIX: '22'

  NSG_IN_SRC: '75.68.47.183/32'

  APP_SUBNET_NAME: 'app'
  APP_SUBNET_PREFIX: '10.0.5.0/24'
  APP_SUBNET_SERVICE_ENDPOINTS: 'Microsoft.AzureCosmosDB,Microsoft.EventHub,Microsoft.KeyVault'

jobs:
  deploy-app-in-region:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: [eastus]
    steps:
      - name: Install Azure CLI extensions
        run: |
          az extension add --name aks-preview

      - name: Checkout repository
        if: success()
        uses: actions/checkout@v2

      - name: Azure login
        if: success()
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Prepare dynamic env vars
        if: success()
        run: |
          AZURE_RESOURCE_GROUP=always-on-${{ matrix.region }}
          AKS_CLUSTER_NAME=${{ env.PREFIX }}-${{ matrix.region }}
          VNET_NAME=${{ env.PREFIX }}-${{ matrix.region }}
          APP_NSG_NAME=app-${{ matrix.region }}

          echo "AZURE_RESOURCE_GROUP=$AZURE_RESOURCE_GROUP" >> $GITHUB_ENV
          echo "AKS_CLUSTER_NAME=$AKS_CLUSTER_NAME" >> $GITHUB_ENV
          echo "VNET_NAME=$VNET_NAME" >> $GITHUB_ENV
          echo "APP_NSG_NAME=$APP_NSG_NAME" >> $GITHUB_ENV


      #- name: Deploy App Subnet - remove NSG
      #  if: success()
      #  uses: azure/arm-deploy@v1
      #  with:
      #    resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
      #    deploymentName: ${{ env.APP_SUBNET_NAME }}
      #    template: ./templates/net.vnet.subnet.json
      #    parameters: vnetName=${{ env.VNET_NAME }} subnetName=${{ env.APP_SUBNET_NAME }} subnetPrefix=${{ env.APP_SUBNET_PREFIX }} serviceEndpoints=${{ env.APP_SUBNET_SERVICE_ENDPOINTS }}


      - name: Set AKS Context
        if: success()
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          resource-group: '${{ env.AZURE_RESOURCE_GROUP }}'
          cluster-name: '${{ env.AKS_CLUSTER_NAME }}'

      - name: Deploy app to AKS
        if: success()
        uses: Azure/k8s-deploy@v1.4
        with:
          manifests: 'aks/azure-vote.yaml'
          kubectl-version: 'latest'
          force: true


      #- name: Deploy App Subnet - re-add NSG
      #  if: success()
      #  uses: azure/arm-deploy@v1
      #  with:
      #    resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
      #    deploymentName: ${{ env.APP_SUBNET_NAME }}
      #    template: ./templates/net.vnet.subnet.json
      #    parameters: vnetName=${{ env.VNET_NAME }} subnetName=${{ env.APP_SUBNET_NAME }} subnetPrefix=${{ env.APP_SUBNET_PREFIX }} nsgResourceGroup=${{ env.AZURE_RESOURCE_GROUP }} nsgName=${{ env.APP_NSG_NAME }} serviceEndpoints=${{ env.APP_SUBNET_SERVICE_ENDPOINTS }}


      - name: Azure logout
        run: |
          az logout
