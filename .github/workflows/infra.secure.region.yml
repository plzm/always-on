name: Infra - Secure Region

on: 
  workflow_dispatch:

env:
  PREFIX: 'pz-ao'
  SUFFIX: '19'

  AZURE_RESOURCE_GROUP_GLOBAL: 'always-on-global'

  NSG_IN_SRC: '75.68.47.183/32'

  AKS_ZONES_FOR_CLI: '1 2 3'
  AKS_VERSION: '1.20.5'
  AKS_NET_PLUGIN: 'kubenet'
  AKS_SERVICE_CIDR: '10.1.0.0/16'
  AKS_DNS_SERVICE_IP: '10.1.0.10'
  AKS_POD_CIDR: '10.241.0.0/16'
  AKS_DOCKER_BRIDGE_ADDRESS: '172.17.0.1/16'

  AKS_SYSTEM_POOL_NODE_COUNT: '1'
  AKS_SYSTEM_POOL_AUTOSCALE: 'true'
  AKS_SYSTEM_POOL_AUTOSCALE_COUNT_MIN: '1'
  AKS_SYSTEM_POOL_AUTOSCALE_COUNT_MAX: '5'
  AKS_SYSTEM_POOL_NODE_SIZE: 'Standard_DS2_v2'

  AKS_USER_POOL_DEPLOY: 'false'
  AKS_USER_POOL_NODE_NAME: 'userpool1'
  AKS_USER_POOL_NODE_COUNT: '0'
  AKS_USER_POOL_AUTOSCALE: 'true'
  AKS_USER_POOL_AUTOSCALE_COUNT_MIN: '0'
  AKS_USER_POOL_AUTOSCALE_COUNT_MAX: '10'
  AKS_USER_POOL_NODE_SIZE: 'Standard_DS2_v2'

jobs:
  secure-region:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: [eastus]
    steps:
      - name: Install Azure CLI extensions
        run: |
          az extension add --name aks-preview
          az extension add --name application-insights
          az extension add --name front-door

      - name: Checkout repository
        if: success()
        uses: actions/checkout@v2

      - name: Azure login
        if: success()
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Prepare dynamic env vars
        if: success()
        run: |
          UAMI_NAME=${{ env.PREFIX }}-uami

          AZURE_RESOURCE_GROUP=always-on-${{ matrix.region }}

          AKS_CLUSTER_NAME=${{ env.PREFIX }}-${{ matrix.region }}

          echo "AZURE_RESOURCE_GROUP=$AZURE_RESOURCE_GROUP" >> $GITHUB_ENV
          echo "AKS_CLUSTER_NAME=$AKS_CLUSTER_NAME" >> $GITHUB_ENV
          echo "UAMI_NAME=$UAMI_NAME" >> $GITHUB_ENV

          echo "UAMI_ID=$(az identity show --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} -g ${{ env.AZURE_RESOURCE_GROUP_GLOBAL }} -n $UAMI_NAME -o tsv --query 'id')" >> $GITHUB_ENV
          echo "UAMI_PRINCIPAL_ID=$(az identity show --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} -g ${{ env.AZURE_RESOURCE_GROUP_GLOBAL }} -n $UAMI_NAME -o tsv --query 'principalId')" >> $GITHUB_ENV

          echo "APPGW_PUBLIC_IP_NAME=${{ env.PREFIX }}-appgw-${{ matrix.region }}" >> $GITHUB_ENV

          echo "AZURE_RESOURCE_GROUP_AKS_NODES=$AZURE_RESOURCE_GROUP-$AKS_CLUSTER_NAME" >> $GITHUB_ENV
          echo "AKS_DNS_PREFIX=${AKS_CLUSTER_NAME//-/}" >> $GITHUB_ENV

          echo "APIM_SUBNET_ID=$(az network vnet subnet show --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} -g ${{ env.AZURE_RESOURCE_GROUP }} --vnet-name ${{ env.VNET_NAME }} -n ${{ env.APIM_SUBNET_NAME }} -o tsv --query 'id')" >> $GITHUB_ENV
          echo "APP_SUBNET_ID=$(az network vnet subnet show --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} -g ${{ env.AZURE_RESOURCE_GROUP }} --vnet-name ${{ env.VNET_NAME }} -n ${{ env.APP_SUBNET_NAME }} -o tsv --query 'id')" >> $GITHUB_ENV

      - name: Get App GW Public IP and prepare AKS API Server IP address range restriction
        if: success()
        run: |
          APPGW_PUBLIC_IP_ADDRESS="$(az network public-ip show --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} -g ${{ env.AZURE_RESOURCE_GROUP }} -n ${{ env.APPGW_PUBLIC_IP_NAME }} -o tsv --query 'ipAddress')"
          echo "AKS_API_SERVER_AUTH_IP_RANGES=$APPGW_PUBLIC_IP_ADDRESS/32,${{ env.NSG_IN_SRC }}" >> $GITHUB_ENV

