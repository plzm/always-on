name: Test-Locust

on: 
  workflow_dispatch:

env:
  PREFIX: 'pz-ao'

  AZURE_RESOURCE_GROUP_GLOBAL: 'always-on-global'
  AZURE_LOCATION_TESTS: 'eastus2'

  STORAGE_FILE_SHARE_NAME_TESTS: 'locust'

  LOCUST_WORKERS: 25
  LOCUST_USERS: 500
  LOCUST_USERS_SPAWN_RATE: 50

  LOCUST_FILE_NAME: 'locustfile.py'
  LOCUST_FILE_PATH: './tools/locust/$LOCUST_FILE_NAME'
  LOCUST_RUNTIME: '5m'

jobs:
  locust:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure login
        if: success()
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Azure CLI Extensions
        if: success()
        run: |
          az extension add --name front-door

      - name: Prepare dynamic env vars
        if: success()
        run: |
          AZURE_RESOURCE_GROUP_TESTS="always-on-tests-"$GITHUB_RUN_NUMBER

          STORAGE_ACCT_NAME_GLOBAL=${PREFIX//-/}global

          FRONT_DOOR_NAME=${{ env.PREFIX }}
          FRONT_DOOR_ENDPOINT_NAME=$FRONT_DOOR_NAME

          FRONT_DOOR_ENDPOINT_FQDN=$(az afd endpoint show --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}} -g ${{env.AZURE_RESOURCE_GROUP_GLOBAL}} --profile-name $FRONT_DOOR_NAME --endpoint-name $FRONT_DOOR_ENDPOINT_NAME -o tsv --query 'hostName')
          API_ENDPOINT=https://$FRONT_DOOR_ENDPOINT_FQDN/api

          echo "AZURE_RESOURCE_GROUP_TESTS=$AZURE_RESOURCE_GROUP_TESTS" >> $GITHUB_ENV
          echo "STORAGE_ACCT_NAME_GLOBAL=$STORAGE_ACCT_NAME_GLOBAL" >> $GITHUB_ENV
          echo "API_ENDPOINT=$API_ENDPOINT" >> $GITHUB_ENV

      - name: Create Azure resource group
        if: success()
        run: |
          az group create --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} --location ${{ env.AZURE_LOCATION_TESTS }} --name ${{ env.AZURE_RESOURCE_GROUP_TESTS }}

      - name: Deploy File Share for Locust results to global Storage Account
        if: success()
        uses: azure/arm-deploy@main
        with:
          resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_GLOBAL }}
          deploymentName: ${{ env.STORAGE_ACCT_NAME_GLOBAL }}-${{ env.STORAGE_FILE_SHARE_NAME_TESTS }}
          template: ./src/infra-deploy/templates/storage.file-share.json
          parameters: storageAccountName=${{ env.STORAGE_ACCT_NAME_GLOBAL }} fileShareName=${{ env.STORAGE_FILE_SHARE_NAME_TESTS }}

      - name: Upload Locust File to File Share
        if: success()
        run: |
            az storage file upload --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}} --account-name ${{ env.STORAGE_ACCT_NAME_GLOBAL }} -s ${{ env.STORAGE_FILE_SHARE_NAME_TESTS }} --source ${{ env.LOCUST_FILE_PATH }} --path ${{ env.LOCUST_FILE_NAME }} --verbose

      - name: Deploy Locust Infrastructure and Start Tests
        if: success()
        uses: azure/arm-deploy@main
        with:
          resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_TESTS }}
          deploymentName: locust
          template: ./src/infra-deploy/templates/locust.json
          parameters: location=${{ env.AZURE_LOCATION_TESTS }} hostToTest=${{ env.API_ENDPOINT }} numberOfWorkers=${{ env.LOCUST_WORKERS }} numberOfUsers=${{ env.LOCUST_USERS }} numberOfUsersToSpawnPerSecond=${{ env.LOCUST_USERS_SPAWN_RATE }} runtime=${{ env.LOCUST_RUNTIME }} storageAccountResourceGroup=${{ env.AZURE_RESOURCE_GROUP_GLOBAL }} storageAccountName=${{ env.STORAGE_ACCT_NAME_GLOBAL }} fileShareName=${{ env.STORAGE_FILE_SHARE_NAME_TESTS }}

      - name: Azure logout
        run: |
          az logout
