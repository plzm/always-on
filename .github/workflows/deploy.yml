name: Deploy Azure environment

on: 
  pull_request:
    types: [labeled]

env:
  AZURE_RESOURCE_GROUP: 'always-on-3'
  AZURE_LOCATION: '"East US"'
  NSG_NAME: 'ao-eus'
  NSG_IN_SRC: '75.68.47.183'
  DDOS_PLAN_NAME: 'ao-ddos'
  VNET_NAME: 'ao-eus'
  VNET_PREFIX: '10.0.0.0/16'
  SUBNET_NAME_APPGW: "AppGw"
  SUBNET_PREFIX_APPGW: "10.0.1.0/24"
  SUBNET_NAME_APP: "App"
  SUBNET_PREFIX_APP: "10.0.2.0/24"
  KEY_VAULT_NAME: 'ao-kv-eus'
  REGISTRY_NAME: 'pzaocr'
  REGISTRY_REPLICATIONS: 'eastus,westus2'

jobs:
  deploy-azure-resources:
    runs-on: ubuntu-latest

    if: contains(github.event.pull_request.labels.*.name, 'deploy')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Create Azure resource group
        if: success()
        run: |
          az group create --location ${{env.AZURE_LOCATION}} --name ${{env.AZURE_RESOURCE_GROUP}} --subscription ${{secrets.AZURE_SUBSCRIPTION_ID}}

      - name: Deploy NSG
        if: success()
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{env.AZURE_RESOURCE_GROUP}}
          template: ./templates/net.nsg.json
          parameters: ./templates/net.nsg.parameters.json location=${{env.AZURE_LOCATION}} nsgName=${{env.NSG_NAME}} nsgRuleInbound100Src=${{env.NSG_IN_SRC}}

      - name: Deploy DDoS Plan
        if: success()
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{env.AZURE_RESOURCE_GROUP}}
          template: ./templates/net.ddos-plan.json
          parameters: ./templates/net.ddos-plan.parameters.json location=${{env.AZURE_LOCATION}} ddosProtectionPlanName=${{env.DDOS_PLAN_NAME}}

      - name: Deploy VNet
        if: success()
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{env.AZURE_RESOURCE_GROUP}}
          template: ./templates/net.vnet.json
          parameters: |
            ./templates/net.vnet.parameters.json location=${{env.AZURE_LOCATION}} vnetName=${{env.VNET_NAME}} vnetPrefix=${{env.VNET_PREFIX}} enableDdosProtection=true ddosProtectionPlanResourceGroup=${{env.AZURE_RESOURCE_GROUP}} ddosProtectionPlanName=${{env.DDOS_PLAN_NAME}}

      - name: Deploy AppGW Subnet
        if: success()
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{env.AZURE_RESOURCE_GROUP}}
          template: ./templates/net.vnet.subnet.json
          parameters: |
            ./templates/net.vnet.subnet.parameters.json vnetName=${{env.VNET_NAME}} subnetName=${{env.SUBNET_NAME_APPGW}} subnetPrefix=${{env.SUBNET_PREFIX_APPGW}}

      - name: Deploy App Subnet
        if: success()
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{env.AZURE_RESOURCE_GROUP}}
          template: ./templates/net.vnet.subnet.json
          parameters: |
            ./templates/net.vnet.subnet.parameters.json vnetName=${{env.VNET_NAME}} subnetName=${{env.SUBNET_NAME_APP}} subnetPrefix=${{env.SUBNET_PREFIX_APP}} nsgResourceGroup=${{env.AZURE_RESOURCE_GROUP}} nsgName=${{env.NSG_NAME}}

      - name: Deploy Key Vault
        if: success()
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{env.AZURE_RESOURCE_GROUP}}
          template: ./templates/key-vault.json
          parameters: ./templates/key-vault.parameters.json location=${{env.AZURE_LOCATION}} tenantId=${{secrets.AZURE_TENANT_ID}} keyVaultName=${{env.KEY_VAULT_NAME}}

      - name: Deploy Container Registry
        if: success()
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{env.AZURE_RESOURCE_GROUP}}
          template: ./templates/container-registry.json
          parameters: location=${{env.AZURE_LOCATION}} registryName=${{env.REGISTRY_NAME}} skuName=Premium replicationLocations=${{env.REGISTRY_REPLICATIONS}} zoneRedundancy=Enabled

      - name: Azure logout
        run: |
          az logout
