name: AO.Test.Chaos.CreateExperiment.AKS

on: 
  workflow_dispatch:

env:
  EXPERIMENT_RESOURCE_GROUP: 'test-chaos'
  EXPERIMENT_LOCATION: 'eastus2euap'

  EXPERIMENT_NAME: 'chaos-aks-20210716-01'

  TARGET_RESOURCE_GROUP: 'always-on-eastus2'
  TARGET_NAME: 'pz-ao-eastus2'

  RBAC_ROLE_NAME: 'Contributor'

  FAULT_TYPE: 'PodChaos'
  DURATION: 'PT2M'
  FAULT_SPEC_PATH: './src/scripts/chaos-testing/chaos-mesh/pod-chaos.pod-kill.yaml'

  CHAOS_NAMESPACE: 'chaos-testing'

jobs:
  create-experiment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure login
        if: success()
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Prepare dynamic env vars
        if: success()
        run: |
          echo "TARGET_ID=$(az aks show --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} -g ${{ env.TARGET_RESOURCE_GROUP }} -n ${{ env.TARGET_NAME }} -o tsv --query 'id')" >> $GITHUB_ENV

      - name: Install YQ
        if: success()
        run: |
          YQVERSION=v4.10.0
          YQBINARY=yq_linux_amd64
          sudo wget https://github.com/mikefarah/yq/releases/download/${YQVERSION}/${YQBINARY} -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Install Helm 3
        if: success()
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          helm repo add chaos-mesh https://charts.chaos-mesh.org

      - name: Install Chaos Mesh on AKS so Experiment can run
        if: success()
        run: |
          az aks get-credentials --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}" -g "${{ env.TARGET_RESOURCE_GROUP }}" -n "${{ env.TARGET_NAME }}" --overwrite-existing --verbose
          kubectl create ns "${{ env.CHAOS_NAMESPACE }}"
          helm upgrade chaos-mesh chaos-mesh/chaos-mesh --namespace=chaos-testing --set chaosDaemon.runtime=containerd --set chaosDaemon.socketPath=/run/containerd/containerd.sock --set dnsServer.create=true --install

      - name: Prepare AKS Chaos Experiment JSON Fault Spec
        if: success()
        run: |
          rawJson="$(yq eval '.spec' "${{ env.FAULT_SPEC_PATH }}" --tojson --indent 0)"
          escapedJson=${rawJson//\"/\\\"}
          echo "FAULT_SPEC_JSON=$escapedJson" >> $GITHUB_ENV

      - name: Deploy Chaos Experiment
        if: success()
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.EXPERIMENT_RESOURCE_GROUP }}
          template: ./src/infra-deploy/templates/experiment.aks.json
          parameters: location=${{ env.EXPERIMENT_LOCATION }} experimentName=${{ env.EXPERIMENT_NAME }} targetResourceIds="${{ env.TARGET_ID }}" chaosMeshFaultType="${{ env.FAULT_TYPE }}" chaosMeshSpec="${{ env.FAULT_SPEC_JSON }}" duration="${{ env.DURATION }}"

      - name: Make Script File Executable
        if: success()
        run: |
          chmod +x ./src/scripts/chaos-testing/create-experiment-mi-role-assignment.sh

      - name: Configure Chaos Experiment System Managed Identity RBAC Permissions
        if: success()
        run: |
          ./src/scripts/chaos-testing/create-experiment-mi-role-assignment.sh ${{ secrets.AZURE_SUBSCRIPTION_ID }} ${{ env.EXPERIMENT_RESOURCE_GROUP }} ${{ env.EXPERIMENT_NAME }} ${{ env.TARGET_RESOURCE_GROUP }} ${{ env.RBAC_ROLE_NAME }}

      - name: Azure logout
        run: |
          az logout
